# https://github.com/Kong/docker-kong/blob/master/compose/docker-compose.yml
# https://hub.docker.com/layers/kong/library/kong/2.1.3-ubuntu/images/sha256-1e918d483fefce686fb6d5232d343a310ffdf157356117292289a9437354ec57?context=explore
# https://hub.docker.com/r/pantsel/konga/dockerfile

version: '3.8'
services:
  pg:
    image: postgres:9.6
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - kong-dev
    volumes:
      - ./data/pg:/var/lib/postgresql/data
    env_file: env/pg.env
  
  kong:
    image: kong:2.1.3-ubuntu
    depends_on:
      - pg
    environment:
      - HOSTNAME="kong"
    env_file: 
      - env/kong.env
      - env/.env
    networks:
      - kong-dev
    ports:
      - 8010:8000 # 流量入口
      - 8011:8001 # adminAPI http 服务
      # - "8443:8443/tcp" # 前端 https 服务
      # - "127.0.0.1:8444:8444/tcp" # adminAPI https 服务
    # healthcheck:
    #   test: ["CMD", "kong", "health"]
    #   interval: 10s
    #   timeout: 10s
    #   retries: 10
    volumes: 
      - "./config/kong.conf:/etc/kong/kong.conf"
      - "./plugins/kong/plugins/:/etc/kong/plugins/"
    # restart: on-failure
    # deploy:
    #   restart_policy:
    #     condition: on-failure
  konga:
    image: pantsel/konga:0.14.9
    depends_on:
      - pg
    environment:
      - HOSTNAME="konga"
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    env_file: env/konga.env
    networks:
      - kong-dev
    ports:
      - 1338:1337
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 100s
      timeout: 10s
      retries: 10
  cli:
    image: kong:2.1.3-ubuntu
    container_name: kong-dev-cli
    environment:
      HOSTNAME: "cli"
    command: /bin/bash 
    depends_on: 
      - pg
    volumes: 
      - "./config/kong.conf:/etc/kong/kong.conf"
      - "./plugins/kong/plugins/:/etc/kong/plugins/"
    stdin_open: true
    tty: true
    env_file: env/.env
    networks:
      - kong-dev

networks:
  kong-dev: